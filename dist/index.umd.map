{"version":3,"sources":["global.js","init/index.js","logger/index.js","index.js"],"names":["enable","options","debug","Global","args","console","info","log","warn","error","init","logger"],"mappings":";AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CAAEA,QAAQ,GAAV,QAAA,QAAA;;ACmBd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAJD,IAAA,EAAA,EAAA,QAAA,cAIC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAFc,IAAA,EAAA,SAACC,GACLD,EAAAA,QAAAA,OAASC,EAAQD,QAC3B,QAAA,QAAA;;ACDc,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlBf,IAAA,EAAA,EAAA,QAAA,cAkBe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAA,EAAA,CACXE,MAAO,WACCC,GAAAA,EAAOH,QAAAA,OAAQ,CADZI,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EACY,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IADZA,EACY,GAAA,UAAA,GACfC,QAAQH,MAAME,KAGtBE,KAAM,WACEH,GAAAA,EAAOH,QAAAA,OAAQ,CADbI,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EACa,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IADbA,EACa,GAAA,UAAA,GACfC,QAAQC,KAAKF,KAGrBG,IAAK,WACGJ,GAAAA,EAAOH,QAAAA,OAAQ,CADdI,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EACc,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IADdA,EACc,GAAA,UAAA,GACfC,QAAQE,IAAIH,KAGpBI,KAAM,WAAIJ,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAS,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAATA,EAAS,GAAA,UAAA,GACfC,QAAQG,KAAKJ,IAEjBK,MAAO,WAAIL,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAS,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAATA,EAAS,GAAA,UAAA,GAChBC,QAAQI,MAAML,KApBP,QAAA,QAAA;;ACXA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAHf,IAAA,EAAA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,aAEe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAA,EAAA,CAIXM,KAAAA,EAJW,QAQXR,MAAOS,EAAOT,QAAAA,MACdI,KAAMK,EAAOL,QAAAA,KACbC,IAAKI,EAAOJ,QAAAA,IACZC,KAAMG,EAAOH,QAAAA,KACbC,MAAOE,EAAOF,QAAAA,OAZH,QAAA,QAAA","file":"index.umd.map","sourceRoot":"../src","sourcesContent":["export default { enable: true };","/**\n * @memberof JsLogger\n * @function init\n * @description Return the message + ' world'\n * @param {Object} options (see attributes below)\n * @param {String} [options.enable=false] enable/disable log\n\n *\n * @example\n * // Initialize JsLogger\n *  JsLogger.init({\n *      enable: true\n *  });\n */\n\nimport Global from '../global';\n\nexport default (options) => {\n    Global.enable = options.enable;\n};","import Global from '../global';\n\n/**\n * @memberof JsLogger\n * @function logger\n * @description Logger implementation\n * @param {Object} options (see attributes below)\n * @param {String} [options.message=''] message to show\n * @returns void\n\n *\n * @example\n * // Log JsLogger\n *  JsLogger.log({\n *      message: 'hello'\n *  });\n */\n\nexport default {\n    debug: (...args) => {\n        if (Global.enable) {\n            console.debug(args);\n        }\n    },\n    info: (...args) => {\n        if (Global.enable) {\n            console.info(args);\n        }\n    },\n    log: (...args) => {\n        if (Global.enable) {\n            console.log(args);\n        }\n    },\n    warn: (...args) => {\n        console.warn(args);\n    },\n    error: (...args) => {\n        console.error(args);\n    },\n};","/**\n * @class JsLogger\n * @description Description of your library\n */\nimport init from './init';\nimport logger from './logger';\n\nexport default {\n    /**\n     * @see modules/init\n     */\n    init,\n    /**\n     * @see modules/log\n     */\n    debug: logger.debug,\n    info: logger.info,\n    log: logger.log,\n    warn: logger.warn,\n    error: logger.error,\n};\n"]}